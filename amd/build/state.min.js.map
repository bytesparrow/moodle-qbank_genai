{"version":3,"file":"state.min.js","sources":["../src/state.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Code for checking questions generation state.\n *\n * @package\n * @category    admin\n * @copyright   2023 Ruthy Salomon <ruthy.salomon@gmail.com> , Yedidia Klein <yedidia@openapp.co.il>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/str', 'core/templates'], function ($, Ajax, Str, Templates) {\n    // Load the state of the questions generation every 20 seconds.\n    var intervalId = setInterval(function () {\n        checkState(intervalId);\n    }, 10000);\n\n    /**\n     * Check the state of the questions generation.\n     * @param {int} intervalId The interval id.\n     * @return {void}\n     * @example\n     *  checkState(intervalId);\n     */\n    function checkState(intervalId) {\n        if (document.getElementById(\"qbank_genai_userid\") === null)\n        {   //nothing to check, value does not exist in DOM\n            return;\n        }\n        var userid = document.getElementById(\"qbank_genai_userid\").textContent.trim();\n        var uniqid = document.getElementById(\"qbank_genai_uniqid\").textContent.trim();\n        var courseid = document.getElementById(\"qbank_genai_courseid\").textContent.trim();\n        var promises = Ajax.call([{\n                methodname: 'qbank_genai_check_state',\n                args: {\n                    userid: userid,\n                    uniqid: uniqid\n                }\n            }]);\n        promises[0].then(function (showSuccess) {\n            // If Questions are ready, show success message.\n            if (showSuccess[0].success != '') {\n                if (showSuccess[0].success == \"0\") { //Error (probably question not created after n tries).\n                    var error = showSuccess[0].tries;\n                } else {\n                    var error = '';\n                }\n                if (!error)\n                {\n                    var successmessage = JSON.parse(showSuccess[0].success);\n                    if (Object.keys(successmessage).length == 1) {\n                        var single = true;\n                    } else {\n                        var single = false;\n                    }\n                }\n\n\n                Templates.render('qbank_genai/success', {success: successmessage,\n                    courseid: courseid,\n                    wwwroot: M.cfg.wwwroot,\n                    error: error,\n                    single: single}).then(function (html) {\n                    $(\"#qbank_genai_success\").html(html);\n                });\n                // Stop checking the state while questions are ready.\n                clearInterval(intervalId);\n            }\n            var percent = 0;\n            var numoftries = showSuccess[0].numoftries;\n            var tries = showSuccess[0].tries;\n            // Show info if exists.\n            if (showSuccess[0].tries !== null) {\n                // If the questions are ready, show 100%.\n                if (showSuccess[0].success != '') {\n                    percent = 100;\n                } else {\n                    percent = Math.round((showSuccess[0].tries / numoftries) * 100);\n                }\n                //\"translate\" the strings and add the vars\n                Str.get_strings([\n                {key: 'generationtries', component: 'qbank_genai', param: tries},\n                {key: 'numoftries', component: 'qbank_genai', param: numoftries}\n                ]).then(function (strings) { //now render the template\n                    const [generationtriesStr, numoftriesStr] = strings;\n                    Templates.render('qbank_genai/info', {\n                        tries: tries,\n                        numoftries: numoftries,\n                        percent: percent,\n                        generationtries_str: generationtriesStr,\n                        numoftries_str: numoftriesStr,\n                    }\n                    ).then(function (html) {\n                        $(\"#qbank_genai_info\").html(html);\n                    });\n                });\n            }\n        });\n    }\n});\n"],"names":["define","$","Ajax","Str","Templates","intervalId","setInterval","document","getElementById","userid","textContent","trim","uniqid","courseid","call","methodname","args","then","showSuccess","success","error","tries","successmessage","JSON","parse","Object","keys","length","single","render","wwwroot","M","cfg","html","clearInterval","percent","numoftries","Math","round","get_strings","key","component","param","strings","generationtriesStr","numoftriesStr","generationtries_str","numoftries_str","checkState"],"mappings":";;;;;;;;AAwBAA,2BAAO,CAAC,SAAU,YAAa,WAAY,mBAAmB,SAAUC,EAAGC,KAAMC,IAAKC,eAE9EC,WAAaC,aAAY,qBAWTD,eACsC,OAAlDE,SAASC,eAAe,iCAIxBC,OAASF,SAASC,eAAe,sBAAsBE,YAAYC,OACnEC,OAASL,SAASC,eAAe,sBAAsBE,YAAYC,OACnEE,SAAWN,SAASC,eAAe,wBAAwBE,YAAYC,OAC5DT,KAAKY,KAAK,CAAC,CAClBC,WAAY,0BACZC,KAAM,CACFP,OAAQA,OACRG,OAAQA,WAGX,GAAGK,MAAK,SAAUC,gBAEO,IAA1BA,YAAY,GAAGC,QAAe,IACA,KAA1BD,YAAY,GAAGC,YACXC,MAAQF,YAAY,GAAGG,WAEvBD,MAAQ,OAEXA,MACL,KACQE,eAAiBC,KAAKC,MAAMN,YAAY,GAAGC,YACL,GAAtCM,OAAOC,KAAKJ,gBAAgBK,WACxBC,QAAS,OAETA,QAAS,EAKrBxB,UAAUyB,OAAO,sBAAuB,CAACV,QAASG,eAC9CT,SAAUA,SACViB,QAASC,EAAEC,IAAIF,QACfV,MAAOA,MACPQ,OAAQA,SAASX,MAAK,SAAUgB,MAChChC,EAAE,wBAAwBgC,KAAKA,SAGnCC,cAAc7B,gBAEd8B,QAAU,EACVC,WAAalB,YAAY,GAAGkB,WAC5Bf,MAAQH,YAAY,GAAGG,MAEE,OAAzBH,YAAY,GAAGG,QAGXc,QAD0B,IAA1BjB,YAAY,GAAGC,QACL,IAEAkB,KAAKC,MAAOpB,YAAY,GAAGG,MAAQe,WAAc,KAG/DjC,IAAIoC,YAAY,CAChB,CAACC,IAAK,kBAAmBC,UAAW,cAAeC,MAAOrB,OAC1D,CAACmB,IAAK,aAAcC,UAAW,cAAeC,MAAON,cAClDnB,MAAK,SAAU0B,eACPC,mBAAoBC,eAAiBF,QAC5CvC,UAAUyB,OAAO,mBAAoB,CACjCR,MAAOA,MACPe,WAAYA,WACZD,QAASA,QACTW,oBAAqBF,mBACrBG,eAAgBF,gBAElB5B,MAAK,SAAUgB,MACbhC,EAAE,qBAAqBgC,KAAKA,gBA/E5Ce,CAAW3C,cACZ"}